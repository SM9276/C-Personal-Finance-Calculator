.SILENT:
# Compiler and flags
CC = gcc
CFLAGS = -O1 -g -Wall -std=c99 -pedantic

# Valgrind command
VALGRIND = valgrind --tool=memcheck --leak-check=yes --error-exitcode=99 --track-origins=yes

# Source and object files
SRC_DIR = src
OBJ_DIR = obj
SOURCE = $(wildcard $(SRC_DIR)/*.c)
OBJ = $(SOURCE:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

# Target executable
TARGET = GroSal

# Default target
all: $(TARGET)

# Link the target executable
$(TARGET): $(OBJ)
	@echo "Linking!"
	$(CC) $(OBJ) -o $(TARGET)

# Compile each source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(OBJ_DIR)
	@echo "Compiling $<!"
	$(CC) $(CFLAGS) -c $< -o $@

# Run Valgrind
mem: $(TARGET)
	$(VALGRIND) ./$(TARGET) > mem.txt 2>&1

# Clean up build artifacts
clean:
	rm -f $(TARGET)
	rm -rf $(OBJ_DIR)
	@echo "Cleanup completed"

# Print help information
help:
	@echo " all   : compiles code"
	@echo " clean : clean up files"
	@echo " mem   : runs Valgrind"
	@echo " help  : prints these strings"

# Declare phony targets
.PHONY: all clean mem help

